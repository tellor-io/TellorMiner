apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus
data:
  prometheus.yaml: |
    global:
      scrape_interval: 5s

    rule_files:
    - /etc/prometheus/alerts/*.yml

    scrape_configs:
    - job_name: endpoints
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

      kubernetes_sd_configs:
      - role: endpoints

      relabel_configs:
      - action: keep
        source_labels: [__meta_kubernetes_service_label_app]
        regex: telliot.*|prometheus|export.*
      - action: replace
        source_labels: [__meta_kubernetes_service_label_app]
        target_label: job
      - action: labeldrop
        regex: __meta_kubernetes_namespace|__meta_kubernetes_pod_node_name|__meta_kubernetes_pod_label_node

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus
  labels:
    app: prometheus
spec:
  serviceName: prometheus
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      securityContext:
        runAsUser: 0
      containers:
      - image: prom/prometheus:v2.24.0
        args:
        - "--config.file=/etc/prometheus/config/prometheus.yaml"
        - "--storage.tsdb.path=/data"
        - "--storage.tsdb.retention.size=40GB" 
        - "--web.enable-lifecycle" 
        name: prometheus
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus/config
        - name: storage
          mountPath: /data
          subPath: prometheus-data
        ports:
        - name: prometheus
          containerPort: 9090
      volumes:
      - name: config-volume
        configMap:
          name: prometheus
      - name: storage
        persistentVolumeClaim:
          claimName: prometheus
      terminationGracePeriodSeconds: 300
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  labels:
    app: prometheus
spec:
  ports:
  - name: prometheus
    port: 9090
    targetPort: prometheus
  selector:
    app: prometheus

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasource-provision
data:
  prometheus-datasource.yaml: |
    apiVersion: 1
    deleteDatasources:
      - name: prometheus
        orgId: 1
    datasources:
    - name: prometheus
      type: prometheus
      access: proxy
      orgId: 1
      url: http://prometheus.default:9090
      isDefault: true
      jsonData:
         graphiteVersion: "1.1"
         tlsAuth: false
         tlsAuthWithCACert: false
      secureJsonData:
        tlsCACert: "..."
        tlsClientCert: "..."
        tlsClientKey: "..."
      version: 1
      editable: true
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  serviceName: grafana
  replicas: 1
  selector:
    matchLabels:
        app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        runAsUser: 472
        fsGroup: 472
      containers:
      - image: grafana/grafana:7.3.6
        name: grafana
        imagePullPolicy: IfNotPresent
        env:
          - name: GF_SERVER_ROOT_URL
            value: "http://monitor.tellor.io/"
          - name: GF_SERVER_SERVE_FROM_SUB_PATH
            value: "true"
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "true"
          - name: GF_AUTH_ANONYMOUS_ORG_NAME
            value: "Main Org." # Don't change or it will disable anonymous access.
          - name: GF_USERS_VIEWERS_CAN_EDIT
            value: "false"
        volumeMounts:
        - name: grafana
          mountPath: /var/lib/grafana
        - name: grafana-datasource-provision
          mountPath: /etc/grafana/provisioning/datasources
        ports:
        - name: grafana
          containerPort: 3000
      volumes:
      - name: grafana
        persistentVolumeClaim:
          claimName: grafana
      - name: grafana-datasource-provision
        configMap:
          name: grafana-datasource-provision
